import os
import openai
from PIL import Image
import streamlit as st
openai.api_key = os.environ.get('OpenAI_API_Key')
import urllib.request


st.set_page_config(
    page_title="ChatGPT + DALL-E 2",
    page_icon="✨",
    layout="centered",
    initial_sidebar_state="auto",
)




# Set your OpenAI API key

openai.api_key = st.secrets["openai_api_key"]
# Function for OpenAI GPT-3.5-turbo completion

def openai_completion(prompt):
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "You are a helpful assistant."},
            {"role": "user", "content": prompt},
        ]
    )
    
    if 'choices' in response and response['choices']:
        return response['choices'][0]['message']['content']
    else:
        return "Error in response. Please check."

# Example usage
prompt_text = ""
openai_result = openai_completion(prompt_text)

# Display the result
st.write("OpenAI GPT-3.5-turbo Result:")
st.write(openai_result)
        

def generate_image(image_description):
  img_response = openai.Image.create(
    prompt = image_description,
    n=1,  # specify number of images return
    size="512x512")
  img_url = img_response['data'][0]['url']
  urllib.request.urlretrieve(img_url, 'img.png')
  img = Image.open("img.png")
  return img

top_image = Image.open('static/banner_top.png')
bottom_image = Image.open('static/banner_bottom.png')
main_image = Image.open('static/main_banner.png')

st.sidebar.image(top_image,use_column_width='auto')
format_type = st.sidebar.selectbox('Choose your OpenAI magician 😉',["ChatGPT 3.5","DALL-E 2"])
st.sidebar.image(bottom_image,use_column_width='auto')

st.image(main_image,use_column_width='auto')
st.title("📄 ChatGPT 3.5 + DALL-E 🏜 Streamlit")

if format_type == "ChatGPT 3.5":
    input_text = st.text_area("Please enter text here... 🙋", height=50)
    chat_button = st.button("Do the Magic! ✨")

    if chat_button and input_text.strip() != "":
        with st.spinner("Loading...💫"):
            openai_answer = openai_completion(input_text)
            st.success(openai_answer)
    else:
        st.warning("Please enter something! ⚠")

else:
    input_text = st.text_area("Please enter text here... 🙋", height=50)
    image_button = st.button("Generate Image 🚀")

    if image_button and input_text.strip() != "":
        with st.spinner("Generating Image... 🎨"):
            generated_image = generate_image(input_text)
            st.image(generated_image, use_column_width='auto')
    else:
        st.warning("Please enter something for image generation! ⚠")

       
st.markdown("<strong>Created By:Steven Bouldin</strong></a></center><hr>", unsafe_allow_html=True)
st.markdown("<style> footer {visibility: hidden;} </style>", unsafe_allow_html=True)